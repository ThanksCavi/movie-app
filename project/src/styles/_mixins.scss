// Clamp Vars
// Grid Vars
// Media Vars
// Clamp Function
// GRIDS (Fixed Column Width)
// GRIDS (Media Queries)
// Text Clamp

// Clamp Vars
$clampStart: 1600;
$media: 1024;
$clampEnd: 280;
$multiplier: 0.75;

// Grid Vars
$column-gap: 20px;
$row-gap: 32px;

// Media Vars
$mobile: 480;
$tablet: 767;
$desktop: 1024;

// min 1025
@mixin desktop {
	@media (min-width: #{$desktop + 1px}) {
		@content;
	}
}

// max 1024
@mixin tablet {
	@media (max-width: #{$desktop + px}) {
		@content;
	}
}

// max 767
@mixin phone {
	@media (max-width: #{$tablet + px}) {
		@content;
	}
}

// max 480
@mixin phone-small {
	@media (max-width: #{$mobile + px}) {
		@content;
	}
}

// Clamp Function
@function clampFunction($max, $min: $max * $multiplier, $clampStart: $clampStart) {
    @if $min < 0.99 {
        $min: $max * $min;
    }
	@return clamp(#{$min}px, (#{$max} / #{$clampStart} * 100vw), #{$max}px);
}

// GRIDS (Fixed Column Width)
// prettier-ignore
@mixin grid(
	$columns: 3, 
	$column-gap: $column-gap, 
	$row-gap: $row-gap, 
	$media: $media, 
	$max-width: null, 
	$center: null, 
	$important: null
) {

	// Grid Container
	display: flex;
	flex-wrap: wrap;
	row-gap: #{$row-gap} $important;
	column-gap: #{$column-gap};

	// Reset Builder Float
	&::after,
	&::before {
		display: none;
	}

	// Reset Builder Indent
	> *:not(.fullwidth) {
		margin: 0 0 0 0;
	}

	// Grid Items
	> *:not(.fullwidth) {
		width: calc(100% / #{$columns} - #{$column-gap} + (#{$column-gap} / #{$columns})) $important;
	}

	// Grid Responsive
	@if $media {
		@media (max-width: #{$media + px}) {
			flex-direction: column;
			align-items: center;

			// Grid Items
			> *:not(.fullwidth) {
				width: 100%;
				max-width: 100%;
				min-width: auto;

				// If Used: $max-width
				@if $max-width {
					$max-width: 550px !default;
					max-width: #{$max-width};
				}

				// If Used: $center
				@if $center==true {
					text-align: center;
				}

				@content;
			}
		}
	}
}

// GRIDS (Media Queries)
// prettier-ignore
@mixin gridMediaQueries(
	$columns: false, 
	$column-gap: $column-gap, 
	$row-gap: false, 
	$media: $media, 
	$point, 
	$max-width: null, 
	$important: null
) {

	@media (max-width: #{$point + px}) and (min-width: #{$media + 1 + px}) {
		// Change Column Gap
		@if $column-gap {
			column-gap: #{$column-gap};
		}

		// Change Row Gap
		@if $row-gap {
			row-gap: #{$row-gap} $important;
		}

		// Grid Items
		> *:not(.fullwidth) {
			width: calc(100% / #{$columns} - #{$column-gap} + (#{$column-gap} / #{$columns})) $important;
		}

		// If Used: $max-width
		@if $max-width {
			@media (max-width: #{$media + px}) {
				$max-width: 550px !default;
				max-width: #{$max-width};
			}
		}
	}
}

// Text Clamp
@mixin text-clamp($lines) {
	display: -webkit-box;
	-webkit-line-clamp: $lines;
	-webkit-box-orient: vertical;  
	overflow: hidden;
	text-overflow: ellipsis;
}
  